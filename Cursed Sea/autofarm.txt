getgenv().lol = true

for _, tool in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") and tool:FindFirstChild("combatClient") then
        tool.Parent = game.Players.LocalPlayer.Character
    end
end

local ignoredPlayers = {}

local function isPlayerIgnored(playerName)
    for _, name in ipairs(ignoredPlayers) do
        if playerName == name then
            return true
        end
    end
    return false
end

local function getTarget()
    for _, v in pairs(workspace.entities:GetDescendants()) do
        if v.Name == "HumanoidRootPart" then
            return v
        end
    end
    return nil
end

spawn(function()
    local currentTarget = nil
    while wait() do
        if not getgenv().lol then break end

        if currentTarget == nil or not currentTarget:IsDescendantOf(workspace) then
            currentTarget = getTarget() 
        end

        if currentTarget then
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character
            local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
            local targetPosition = currentTarget.Position

            if humanoidRootPart then
                local direction = (targetPosition - humanoidRootPart.Position).unit
                local lookAt = CFrame.new(humanoidRootPart.Position, targetPosition)
                local rotation = CFrame.Angles(0, math.atan2(-direction.Z, -direction.X) + math.pi, 0)               
                humanoidRootPart.CFrame = lookAt * rotation
                game:GetService("Workspace").CurrentCamera.CFrame = CFrame.new(game:GetService("Workspace").CurrentCamera.CFrame.p, currentTarget.Position)
                humanoidRootPart.CFrame = currentTarget.CFrame * CFrame.new(0, 0, 5) * CFrame.Angles(0, math.pi, 0)
                local args = {
                    [1] = "M1"
                }

                game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("combat"):FireServer(unpack(args))

                
                local parent = currentTarget.Parent
                if parent:IsA("Model") and isPlayerIgnored(parent.Name) then
                    currentTarget = nil
                end
            end
        else
            wait(0.5)
        end
    end
end)
